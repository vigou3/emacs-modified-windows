--- psvn.el.orig
+++ psvn.el
@@ -1137,7 +1137,7 @@ If there is no .svn directory, examine if there is
                          (svn-wc-adm-dir-name)))
         (cvs-dir (format "%sCVS" (file-name-as-directory dir))))
     (cond
-     ((file-directory-p svn-dir)
+     ((my-file-directory-p svn-dir)
       (setq arg (svn-status-possibly-negate-meaning-of-arg arg 'svn-status))
       (svn-status-1 dir arg))
      ((and (file-directory-p cvs-dir)
@@ -4568,18 +4568,14 @@ names are relative to the directory where `svn-sta
                          (expand-file-name(concat default-directory file-name-with-revision)))
                 (let ((content
                        (with-temp-buffer
-                         (if (string= revision "BASE")
-                             (insert-file-contents (concat (svn-wc-adm-dir-name)
-                                                           "/text-base/"
-                                                           (file-name-nondirectory file-name)
-                                                           ".svn-base"))
-                           (progn
-                             (svn-run nil t 'cat "cat" "-r" revision
-                                      (concat default-directory (file-name-nondirectory file-name)))
-                             ;;todo: error processing
-                             ;;svn: Filesystem has no item
-                             ;;svn: file not found: revision `15', path `/trunk/file.txt'
-                             (insert-buffer-substring svn-process-buffer-name)))
+                         (progn
+                           (setq buffer-file-coding-system 'undefined)
+                           (svn-run nil t 'cat "cat" "-r" revision
+                                    (concat default-directory (file-name-nondirectory file-name)))
+                           ;;todo: error processing
+                           ;;svn: Filesystem has no item
+                           ;;svn: file not found: revision `15', path `/trunk/file.txt'
+                           (insert-buffer-substring svn-process-buffer-name))
                          (buffer-string))))
                   (find-file file-name-with-revision)
                   (setq buffer-read-only nil)
@@ -6036,12 +6032,12 @@ Return nil, if not in a svn working copy."
       (let* ((base-dir start-dir)
              (repository-root (svn-status-repo-for-path base-dir))
              (dot-svn-dir (concat base-dir (svn-wc-adm-dir-name)))
-             (in-tree (and repository-root (file-exists-p dot-svn-dir)))
+             (in-tree (and repository-root (my-file-exists-p dot-svn-dir)))
              (dir-below (expand-file-name base-dir)))
         ;; (message "repository-root: %s start-dir: %s" repository-root start-dir)
         (if (and (<= (car svn-client-version) 1) (< (cadr svn-client-version) 3))
             (setq base-dir (svn-status-base-dir-for-ancient-svn-client start-dir)) ;; svn version < 1.3
-          (while (when (and dir-below (file-exists-p dot-svn-dir))
+          (while (when (and dir-below (my-file-exists-p dot-svn-dir))
                    (setq base-dir (file-name-directory dot-svn-dir))
                    (string-match "\\(.+/\\).+/" dir-below)
                    (setq dir-below
@@ -6423,6 +6419,19 @@ working directory."
     (setq svn-admin-last-repository-dir (read-string "Repository Url: ")))
   (svn-checkout svn-admin-last-repository-dir "."))
 
+(defun my-file-directory-p (dir)
+  (setq dir (expand-file-name dir))
+  (if (file-directory-p dir)
+      t
+    (let* ((dir1 (directory-file-name (file-name-directory dir)))
+           (dir2 (directory-file-name (file-name-directory dir1))))
+      (if (equal dir1 dir2)
+          nil
+        (my-file-directory-p (concat (file-name-as-directory dir2) ".svn"))))))
+
+(defun my-file-exists-p (dir)
+  (my-file-directory-p dir))
+
 ;; --------------------------------------------------------------------------------
 ;; svn status profiling
 ;; --------------------------------------------------------------------------------

